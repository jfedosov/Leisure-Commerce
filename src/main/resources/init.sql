-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.customer
(
    id serial NOT NULL,
    first_name character varying(20) NOT NULL,
    last_name character varying(20) NOT NULL,
    customer_type_id serial NOT NULL,
    email character varying(30) NOT NULL,
    CONSTRAINT user_id PRIMARY KEY (id),
    CONSTRAINT email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.customer_type
(
    id serial NOT NULL,
    customer_type character varying NOT NULL,
    CONSTRAINT user_profile_id_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product
(
    id serial NOT NULL,
    product_name character varying(50) NOT NULL,
    product_description character varying(255),
    product_price integer,
    product_image character varying(100),
    category_id serial,
    manufacturer_id serial,
    CONSTRAINT product_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.category
(
    id serial NOT NULL,
    category_name character varying(20) NOT NULL,
    CONSTRAINT category_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.manufacturer
(
    id serial NOT NULL,
    name character(20) NOT NULL,
    CONSTRAINT manufacturer_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."order"
(
    id serial NOT NULL,
    customer_id serial NOT NULL,
    order_date date NOT NULL,
    total_price integer NOT NULL,
    shipping_address_id serial NOT NULL,
    order_status_id serial NOT NULL,
    CONSTRAINT order_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_details
(
    id serial NOT NULL,
    order_id serial NOT NULL,
    product_id serial NOT NULL,
    quantity integer NOT NULL,
    CONSTRAINT order_details_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.warehouse
(
    id serial NOT NULL,
    warehouse_name character(20) NOT NULL,
    warehouse_location character varying(50),
    CONSTRAINT warehouse_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.warehouse_product
(
    id serial NOT NULL,
    warehouse_id serial NOT NULL,
    product_id serial NOT NULL,
    quantity integer NOT NULL DEFAULT 0,
    CONSTRAINT warehouse_product_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_category
(
    id serial NOT NULL,
    product_id serial NOT NULL,
    category_id serial NOT NULL,
    CONSTRAINT product_category_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.shipping_address
(
    id serial NOT NULL,
    customer_id serial NOT NULL,
    street character varying,
    city character varying NOT NULL,
    zip_code character varying NOT NULL,
    country character varying NOT NULL,
    CONSTRAINT shipping_address_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_status
(
    id serial NOT NULL,
    status character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.authentication
(
    id serial NOT NULL,
    customer_id serial NOT NULL,
    email character varying(30) NOT NULL,
    password character varying(30) NOT NULL,
    CONSTRAINT authentication_id PRIMARY KEY (id),
    CONSTRAINT customer_id UNIQUE (customer_id)
);

ALTER TABLE IF EXISTS public.customer
    ADD CONSTRAINT user_profile_id_profile_id_fkey FOREIGN KEY (customer_type_id)
    REFERENCES public.customer_type (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT product_id_manufacturer_id_fkey FOREIGN KEY (manufacturer_id)
    REFERENCES public.manufacturer (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT order_id_user_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customer (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT order_id_shipping_address_id_fkey FOREIGN KEY (shipping_address_id)
    REFERENCES public.shipping_address (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT order_id_order_status_id_fkey FOREIGN KEY (order_status_id)
    REFERENCES public.order_status (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT order_details_id_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public."order" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT order_detail_id_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.warehouse_product
    ADD CONSTRAINT warehouse_product_id_warehouse_id_fkey FOREIGN KEY (warehouse_id)
    REFERENCES public.warehouse (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.warehouse_product
    ADD CONSTRAINT warehouse_product_id_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.product_category
    ADD CONSTRAINT product_category_id_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.product_category
    ADD CONSTRAINT product_category_id_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.category (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.shipping_address
    ADD CONSTRAINT shipping_address_id_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customer (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.authentication
    ADD CONSTRAINT authentication_id_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customer (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;

END;